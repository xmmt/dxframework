cmake_minimum_required (VERSION 3.8)

set (CMAKE_CXX_STANDARD 23)

ADD_DEFINITIONS(-DUNICODE)
ADD_DEFINITIONS(-D_UNICODE)

set(HEADERS
    include/dxframework/camera.hpp
    include/dxframework/cat_component.hpp
    include/dxframework/color.hpp
    include/dxframework/constant_buffer_types.hpp
    include/dxframework/cube_component.hpp
    include/dxframework/display.hpp
    include/dxframework/earth_component.hpp
    include/dxframework/fruit_component.hpp
    include/dxframework/floor_component.hpp
    include/dxframework/game.hpp
    include/dxframework/game_component.hpp
    include/dxframework/guitar_component.hpp
    include/dxframework/input_device.hpp
    include/dxframework/mesh.hpp
    include/dxframework/model.hpp
    include/dxframework/renderer.hpp
    include/dxframework/shader.hpp
    include/dxframework/sphere_component.hpp
    include/dxframework/sun_component.hpp
    include/dxframework/texture.hpp
    include/dxframework/timer.hpp
    include/dxframework/transform.hpp
    include/dxframework/triangle_component.hpp
    include/dxframework/triangles_game.hpp
    include/dxframework/types.hpp
    include/dxframework/utils.hpp    
    include/dxframework/vertex.hpp
)

set(SOURCES
    source/camera.cpp
    source/cat_component.cpp
    source/cube_component.cpp
    source/display.cpp
    source/earth_component.cpp
    source/floor_component.cpp
    source/fruit_component.cpp
    source/game.cpp
    source/game_component.cpp
    source/guitar_component.cpp
    source/input_device.cpp
    source/main.cpp
    source/mesh.cpp
    source/model.cpp
    source/renderer.cpp
    source/shader.cpp
    source/sphere_component.cpp
    source/sun_component.cpp
    source/texture.cpp
    source/timer.cpp
    source/transform.cpp
    source/triangle_component.cpp
    source/triangles_game.cpp
    source/utils.cpp
)

add_executable(${PROJECT_NAME} WIN32 ${HEADERS} ${SOURCES} DeclareDPIAware.manifest)

target_include_directories(${PROJECT_NAME} PRIVATE include)
#target_include_directories(${PROJECT_NAME} PRIVATE "../thirdparty/DirectXTK/Inc")

set(LIBRARIES
#    imgui-cmake
#    assimp
#    DirectXTK
    d3d11
    dxgi
    d3dcompiler
    dxguid
    DirectXTK
    assimp

#    uxtheme.lib
)

target_link_libraries(${PROJECT_NAME} ${LIBRARIES})
